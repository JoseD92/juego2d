<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_miku_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 2;
hsp = 0;
vsp = 0;
jumpspeed = 30;
movespeed = 15;
terminalvelocity = 30;
image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);
on_floor = (place_meeting(x,y+1,obj_wall) || place_meeting(x,y+1,piso));

move = key_left + key_right;
if (move == 1) image_xscale = 1;
if (move == -1) image_xscale = -1;

if (hsp != 0 &amp;&amp; on_floor)
{
    image_speed = 0.3;
    sprite_index = sp_miku_run;
}
if (vsp &gt; 0) {
    sprite_index = sp_miku_fall;
    image_speed = 0.3;
}
if (vsp == 0 &amp;&amp; hsp == 0 &amp;&amp; on_floor){
    sprite_index = sp_miku_idle;
    image_speed = 0.3;
}

hsp = move * movespeed;
if (vsp &lt; terminalvelocity) vsp += grav;

if (keyboard_check(ord('E'))) {
    image_speed = 0.3;
    sprite_index = sp_miku_shoot;
}

if (keyboard_check(ord('Q'))) {
    game_restart();
}

if (keyboard_check(ord('B'))) {
    image_speed = 0.3;
    sprite_index = sp_miku_win;
}

if (key_jump &amp;&amp; on_floor)
{
    image_speed = 0.25;
    vsp = -jumpspeed
    sprite_index = sp_miku_jump;
}

//Horizontal Collision
if (place_meeting(x+hsp,y,obj_wall) || place_meeting(x+hsp,y,piso))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall) &amp;&amp; !place_meeting(x+sign(hsp),y,piso))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_wall) || place_meeting(x,y+vsp,piso))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall) &amp;&amp; !place_meeting(x,y+sign(vsp),piso))
    {
       y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
